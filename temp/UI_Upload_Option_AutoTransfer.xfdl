<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="UI_Transfer_Option_AutoDelete" width="480" height="600" titletext="New Form">
    <Layouts>
      <Layout height="600" mobileorientation="landscape" width="480">
        <Button id="btn_dialog" taborder="0" text="+ Add Files" left="350" top="15" width="120" height="30" onclick="btn_dialog_onclick"/>
        <ListView id="ListView00" taborder="1" left="10" top="btn_dialog:10" height="315" width="460" binddataset="ds_fileinfo" useselcolor="false" oncellclick="ListView00_oncellclick" ondrop="ListView00_ondrop">
          <Formats>
            <Format id="default">
              <Band id="body" width="100%" height="40">
                <Cell id="Cell_FileIcon" left="5" top="5" bottom="5" width="50" background="azure" text="icon"/>
                <Cell id="Cell_FileName" left="60" top="5" width="260" text="bind:FILENAME" bottom="5"/>
                <Cell id="Cell_FileSize" left="320" top="5" width="130" text="bind:FILESIZE" bottom="5"/>
              </Band>
            </Format>
          </Formats>
        </ListView>
        <ProgressBar id="ProgressBar00" taborder="2" max="100" min="0" left="10" top="375" width="460" height="25" smooth="true"/>
      </Layout>
    </Layouts>
    <Objects>
      <FileDialog id="FileDialog00" onclose="FileDialog00_onclose"/>
      <Dataset id="ds_fileinfo">
        <ColumnInfo>
          <Column id="FILENAME" type="STRING" size="256"/>
          <Column id="FILESIZE" type="STRING" size="256"/>
          <Column id="LOADED" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileUploadTransfer id="FileUploadTransfer00" onsuccess="FileUploadTransfer00_onsuccess" onprogress="FileUploadTransfer00_onprogress"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
this.FileDialog_VirtualFile_onsuccess = function(obj, e)
{
	var size_table = ["KB", "MB", "GB", "TB", "PB"];
	
	function cutFileSize(filesize, rate, count)
	{
		var ret = (filesize / (Math.pow(rate, count + 1))).toFixed(2);
		if (ret < rate)
		{
			if (size_table[count])
			{
				return ret + " " + size_table[count];
			}
			else
			{
				return filesize + " Byte";
			}
		}
		else
		{
			return cutFileSize(filesize, rate, ++count);
		}
	};
	
	if (e.reason == 9)
	{
		var idx = this.ds_fileinfo.addRow();

		this.ds_fileinfo.setColumn(idx, "FILENAME", obj.filename);
		this.ds_fileinfo.setColumn(idx, "FILESIZE", cutFileSize(e.filesize, Math.pow(2, 10), 0));
		this.ds_fileinfo.setColumn(idx, "LOADED", 0);
	}
};

this.FileDialog00_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	for (var i = 0, len = e.virtualfiles.length, vFile; i < len; i++)
	{
		vFile = e.virtualfiles[i];
		
		this.FileUploadTransfer00.addFile(vFile);
		
		vFile.addEventHandler("onsuccess", this.FileDialog_VirtualFile_onsuccess, this);
		vFile.open(null, 1);
		vFile.getFileSize();
	}
	
	this.FileUploadTransfer00.upload("JSP::fileUpload_XML.jsp");
};

this.ListView00_ondrop = function(obj:nexacro.ListView,e:nexacro.ListViewDragEventInfo)
{
	if (e.datatype != "file")
		return;
		
	for (var i = 0, len = e.filelist.length, vFile; i < len; i++)
	{
		vFile = e.filelist[i];
		
		this.FileUploadTransfer00.addFile(vFile);
		
		vFile.addEventHandler("onsuccess", this.FileDialog_VirtualFile_onsuccess, this);
		vFile.open(null, 1);
		vFile.getFileSize();
	}
	
	this.FileUploadTransfer00.upload("JSP::fileUpload_XML.jsp");
};

this.FileUploadTransfer00_onprogress = function(obj:nexacro.FileUploadTransfer,e:nexacro.FileUploadTransferProgressEventInfo)
{
	this.ProgressBar00.set_pos((e.loaded / e.total)*100);
};

this.btn_dialog_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.FileDialog00.open("FileUPload Dialog", 3);
};]]></Script>
  </Form>
</FDL>
